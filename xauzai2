import os
import shutil
import subprocess

def clone_and_checkout(file_path, destination_folder, branch_name):
    """
    Đọc danh sách repository từ file, clone và checkout branch chỉ định.

    :param file_path: Đường dẫn đến file chứa danh sách repository.
    :param destination_folder: Thư mục đích để clone repository.
    :param branch_name: Tên branch để checkout.
    """
    os.makedirs(destination_folder, exist_ok=True)
    os.chdir(destination_folder)

    with open(file_path, 'r') as file:
        repos = [line.strip() for line in file if line.strip()]

    for repo in repos:
        repo_url = f"https://github.com/{repo}.git"
        repo_name = os.path.basename(repo)
        target_path = os.path.join(destination_folder, repo_name)

        if clone_repo(repo_url, target_path):
            checkout_branch(target_path, branch_name)

def clone_repo(repo_url, target_path):
    """Clone repository từ GitHub."""
    try:
        print(f"Cloning {repo_url} into {target_path}...")
        subprocess.run(['git', 'clone', repo_url, target_path], check=True)
        print(f"Successfully cloned {repo_url}.")
        return True
    except subprocess.CalledProcessError as e:
        print(f"Failed to clone {repo_url}. Error: {e}")
        return False

def checkout_branch(repo_path, branch_name):
    """Checkout branch trong repository."""
    try:
        os.chdir(repo_path)
        print(f"Checking out branch {branch_name} in {repo_path}...")
        subprocess.run(['git', 'checkout', '-b', branch_name], check=True)
        print(f"Successfully checked out branch {branch_name} in {repo_path}.")
    except subprocess.CalledProcessError as e:
        print(f"Failed to checkout branch {branch_name} in {repo_path}. Error: {e}")
    finally:
        os.chdir('..')

def copy_template(repo_path, template_path):
    """Copy thư mục template vào repository."""
    try:
        target_template_path = os.path.join(repo_path, os.path.basename(template_path))
        if os.path.exists(target_template_path):
            print(f"Template already exists in {repo_path}. Skipping copy.")
            return
        shutil.copytree(template_path, target_template_path)
        print(f"Copied template to {repo_path}.")
    except Exception as e:
        print(f"Failed to copy template to {repo_path}. Error: {e}")

def commit_and_push(repo_path, branch_name, commit_message="Add template files"):
    """Commit và push các thay đổi lên GitHub."""
    try:
        os.chdir(repo_path)
        subprocess.run(['git', 'add', '.'], check=True)
        subprocess.run(['git', 'commit', '-m', commit_message], check=True)
        subprocess.run(['git', 'push', '--set-upstream', 'origin', branch_name], check=True)
        print(f"Successfully committed and pushed changes to branch {branch_name}.")
    except subprocess.CalledProcessError as e:
        print(f"Failed to commit or push changes in {repo_path}. Error: {e}")
    finally:
        os.chdir('..')

def main():
    file_path = 'labels.txt'  # File chứa danh sách repo
    destination_folder = '/path/repo'  # Thư mục đích
    branch_name = 'test'  # Tên branch cần checkout
    template_path = '/template'  # Đường dẫn thư mục template

    clone_and_checkout(file_path, destination_folder, branch_name)

    # Copy template, commit và push cho mỗi repo
    with open(file_path, 'r') as file:
        repos = [line.strip() for line in file if line.strip()]

    for repo in repos:
        repo_name = os.path.basename(repo)
        repo_path = os.path.join(destination_folder, repo_name)
        copy_template(repo_path, template_path)
        commit_and_push(repo_path, branch_name)

if __name__ == '__main__':
    main()
